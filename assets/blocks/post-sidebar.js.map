{"version":3,"file":"post-sidebar.js","mappings":"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","sources":["webpack://advanced-gutenberg/./assets/blocks/editor-sidebar/post-sidebar.jsx"],"sourcesContent":["(function ( wpI18n, wpPlugins, wpElement, wpData, wpComponents, wpEditPost ) {\n    const { __ } = wpI18n;\n    const { registerPlugin } = wpPlugins;\n    const { Component, Fragment } = wpElement;\n    const { select, withSelect, withDispatch } = wpData;\n    const { PanelBody, ButtonGroup, Button } = wpComponents;\n    const { PluginSidebar, PluginSidebarMoreMenuItem } = wpEditPost;\n    const { compose } = wp.compose;\n\n    const sidebarName  = \"advgb-editor-sidebar\";\n    const sidebarTitle = __( 'PublishPress Blocks Settings', 'advanced-gutenberg' );\n    const sidebarIcon  = \"layout\";\n    const VISUAL_GUIDE_SETTINGS = [\n        { label: __( 'Inherit from global settings', 'advanced-gutenberg' ), value: '' },\n        { label: __( 'Enable', 'advanced-gutenberg' ), value: 'enable' },\n        { label: __( 'Disable', 'advanced-gutenberg' ), value: 'disable' },\n    ];\n    const EDITOR_WIDTH_SETTINGS = [\n        { label: __( 'Inherit from global settings', 'advanced-gutenberg' ), value: '' },\n        { label: __( 'Original', 'advanced-gutenberg' ), value: 'default' },\n        { label: __( 'Large', 'advanced-gutenberg' ), value: 'large' },\n        { label: __( 'Full width', 'advanced-gutenberg' ), value: 'full' },\n    ];\n\n    const updateBodyClass = function () {\n        const postMetaData = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\n        if (!postMetaData) return null;\n        const { advgb_blocks_editor_width, advgb_blocks_columns_visual_guide } = postMetaData;\n        const bodyClass = window.document.body.classList;\n\n        bodyClass.remove(\n            'advgb-editor-width-default',\n            'advgb-editor-width-large',\n            'advgb-editor-width-full',\n            'advgb-editor-col-guide-enable',\n            'advgb-editor-col-guide-disable',\n        );\n\n        // Editor width\n        if (!!advgb_blocks_editor_width) {\n            bodyClass.add( 'advgb-editor-width-' + advgb_blocks_editor_width );\n        } else {\n            // Global\n            bodyClass.add( 'advgb-editor-width-' + advg_settings.editor_width_global );\n        }\n\n        // Columns visual guide\n        if (!!advgb_blocks_columns_visual_guide) {\n            bodyClass.add( 'advgb-editor-col-guide-' + advgb_blocks_columns_visual_guide );\n        } else {\n            // Global\n            bodyClass.add( 'advgb-editor-col-guide-' + advg_settings.enable_columns_visual_guide_global );\n        }\n    };\n\n    // Line below stopped working - https://github.com/WordPress/gutenberg/issues/28032#issuecomment-759723289\n    // window.document.addEventListener(\"DOMContentLoaded\", updateBodyClass);\n\n    class AdvSidebar extends Component {\n        constructor() {\n            super( ...arguments );\n        }\n\n        onUpdateMeta( metaData ) {\n            const { metaValues, updateMetaField } = this.props;\n            const meta = { ...metaValues, ...metaData };\n\n            updateMetaField( meta );\n            updateBodyClass();\n        }\n\n        render() {\n            const { columnsVisualGuide, editorWidth } = this.props;\n\n            return (\n                <Fragment>\n                    <div className=\"advgb-editor-sidebar-note\">\n                        { __( 'These settings will override the PublishPress Blocks global settings.', 'advanced-gutenberg' ) }\n                    </div>\n                    <PanelBody title={ __( 'Editor width', 'advanced-gutenberg' ) }>\n                        <div className=\"advgb-editor-sidebar-note\">\n                            { __( 'Change your editor width', 'advanced-gutenberg' ) }\n                        </div>\n                        <ButtonGroup className=\"advgb-button-group\">\n                            {EDITOR_WIDTH_SETTINGS.map((setting, index) => (\n                                <Button className=\"advgb-button\"\n                                        key={ index }\n                                        isSecondary={ setting.value !== editorWidth }\n                                        isPrimary={ setting.value === editorWidth }\n                                        onClick={ () => this.onUpdateMeta( { advgb_blocks_editor_width: setting.value } ) }\n                                >\n                                    { setting.label }\n                                </Button>\n                            ) ) }\n                        </ButtonGroup>\n                    </PanelBody>\n                    { advgbBlocks.enable_advgb_blocks !== undefined && advgbBlocks.enable_advgb_blocks === '1' &&\n                        <PanelBody title={ __( 'Columns Visual Guide', 'advanced-gutenberg' ) } initialOpen={ false }>\n                            <div className=\"advgb-editor-sidebar-note\">\n                                { __( 'Border to materialize PublishPress Blocks Column block', 'advanced-gutenberg' ) }\n                            </div>\n                            <ButtonGroup className=\"advgb-button-group\">\n                                {VISUAL_GUIDE_SETTINGS.map((setting, index) => (\n                                    <Button className=\"advgb-button\"\n                                            key={ index }\n                                            isSecondary={ setting.value !== columnsVisualGuide }\n                                            isPrimary={ setting.value === columnsVisualGuide }\n                                            onClick={ () => this.onUpdateMeta( { advgb_blocks_columns_visual_guide: setting.value } ) }\n                                    >\n                                        { setting.label }\n                                    </Button>\n                                ) ) }\n                            </ButtonGroup>\n                        </PanelBody>\n                    }\n                </Fragment>\n            )\n        }\n    }\n\n    const AdvSidebarRender = compose(\n        withDispatch( ( dispatch ) => {\n            return {\n                updateMetaField: ( data ) => {\n                    dispatch( 'core/editor' ).editPost(\n                        { meta: data }\n                    );\n                },\n            }\n        } ),\n        withSelect( ( select ) => {\n            const metaValues = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\n\n            return {\n                metaValues: metaValues,\n                columnsVisualGuide: metaValues.advgb_blocks_columns_visual_guide,\n                editorWidth: metaValues.advgb_blocks_editor_width,\n            }\n        } )\n    )( AdvSidebar );\n\n    registerPlugin( 'advgb-editor-sidebar', {\n        render: function () {\n            return (\n                <Fragment>\n                    <PluginSidebarMoreMenuItem\n                        target={ sidebarName }\n                        icon={ sidebarIcon }\n                    >\n                        { sidebarTitle }\n                    </PluginSidebarMoreMenuItem>\n                    <PluginSidebar\n                        name={ sidebarName }\n                        title={ sidebarTitle }\n                        icon={ sidebarIcon }\n                    >\n                        <div className=\"advgb-editor-sidebar-content\">\n                            <AdvSidebarRender />\n                        </div>\n                    </PluginSidebar>\n                </Fragment>\n            )\n        }\n    } );\n})( wp.i18n, wp.plugins, wp.element, wp.data, wp.components, wp.editPost );\n"],"names":["wpI18n","wpPlugins","wpElement","wpData","wpComponents","wpEditPost","__","registerPlugin","Component","Fragment","select","withSelect","withDispatch","PanelBody","ButtonGroup","Button","PluginSidebar","PluginSidebarMoreMenuItem","compose","sidebarName","sidebarTitle","sidebarIcon","VISUAL_GUIDE_SETTINGS","EDITOR_WIDTH_SETTINGS","AdvSidebar","AdvSidebarRender","wp","i18n","plugins","element","data","components","editPost","label","value","_Component","_inherits","_super","_classCallCheck","apply","arguments","key","metaData","_this$props","this","props","metaValues","updateMetaField","_objectSpread","postMetaData","getEditedPostAttribute","advgb_blocks_editor_width","advgb_blocks_columns_visual_guide","bodyClass","window","document","body","classList","remove","add","advg_settings","editor_width_global","enable_columns_visual_guide_global","updateBodyClass","_this","_this$props2","columnsVisualGuide","editorWidth","React","createElement","className","title","map","setting","index","isSecondary","isPrimary","onClick","onUpdateMeta","undefined","advgbBlocks","enable_advgb_blocks","initialOpen","dispatch","meta","render","target","icon","name"],"sourceRoot":""}